{{template "base" .}}

{{define "content" }}
<div class="container">
    <div class="row">
        <div class="col">
            <h1 class="mt-5">Test microservices</h1>
            <hr>

            <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test broker</a>
            <a id="authBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test authentication</a>
             <a id="loggerBtn" class="btn btn-outline-secondary" href="javascript:void(0);">Test logging</a>

            <div id="output" class="mt-5" style="outline: 1px solid silver; padding: 2em;">
                <span class="text-muted">Output shows here...</span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h4 class="mt-5">Sent</h4>
            <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
            </div>
        </div>
        <div class="col">
            <h4 class="mt-5">Received</h4>
            <div class="mt-1" style="outline: 1px solid silver; padding: 2em;">
                <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
            </div>
        </div>
    </div>
</div>
{{end}}

{{define "js"}}
<script>
    const brokerBtn = document.getElementById("brokerBtn");
    const authBtn = document.getElementById("authBtn");
    const loggerBtn = document.getElementById("loggerBtn");
    const output = document.getElementById("output");
    const sent = document.getElementById("payload");
    const received = document.getElementById("received");

    loggerBtn.addEventListener("click", () => {
    const payload = {
            action: "logger",
            logger: {
                name: "event",
                data: "This is good news!",
            }
        };

        const body = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(payload),
        };

        fetch("http:\/\/localhost:8080/handle", body)
            .then(res => res.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, null, 4);
                received.innerHTML = JSON.stringify(data, null, 4);

                if (data.error) {
                     output.innerHTML +=
                    `<br><strong>Error</strong>: ${data.message}`;
                } else {
                    output.innerHTML +=
                    `<br><strong>Response from logger service</strong>: ${data.message}`;
                }
            })
            .catch(err => {
                output.innerHTML += `<br><br>Error: ${err}`;
            })
    });

    brokerBtn.addEventListener("click", () => {
        const body = {
            method: "POST"
        };
        fetch("http:\/\/localhost:8080", body)
            .then(res => res.json())
            .then(data => {
                sent.innerHTML = "empty POST request";
                received.innerHTML = JSON.stringify(data, null, 4);

                if (data.error) {
                    console.log({
                        data
                    });
                } else {
                    output.innerHTML +=
                    `<br><strong>Response from docker service</strong>: ${data.message}`;
                }
            })
            .catch(err => {
                output.innerHTML += `<br><br>Error: ${err}`;
            })
    })

    authBtn.addEventListener("click", () => {
        const payload = {
            action: "auth",
            auth: {
                password: "verysecret",
                email: "admin@example.com",
            }
        };

        const body = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(payload),
        };

        fetch("http:\/\/localhost:8080/handle", body)
            .then(res => res.json())
            .then(data => {
                sent.innerHTML = JSON.stringify(payload, null, 4);
                received.innerHTML = JSON.stringify(data, null, 4);

                if (data.error) {
                     output.innerHTML +=
                    `<br><strong>Error</strong>: ${data.message}`;
                } else {
                    output.innerHTML +=
                    `<br><strong>Response from docker service</strong>: ${data.message}`;
                }
            })
            .catch(err => {
                output.innerHTML += `<br><br>Error: ${err}`;
            })
    })
</script>
{{end}}
